// <auto-generated />
using FlightManager.DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace FlightManager.DataAccessLayer.Migrations
{
    [DbContext(typeof(FlightManagerDbContext))]
    partial class FlightManagerDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.3-rtm-10026")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FlightManager.DataAccessLayer.Entities.Airline", b =>
                {
                    b.Property<int>("AirlineId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AirlineCode");

                    b.Property<string>("AirlineName");

                    b.HasKey("AirlineId");

                    b.ToTable("Airlines");
                });

            modelBuilder.Entity("FlightManager.DataAccessLayer.Entities.Airport", b =>
                {
                    b.Property<int>("AirportId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CityCode");

                    b.Property<string>("CityName");

                    b.Property<string>("Code");

                    b.Property<string>("CountryCode");

                    b.Property<string>("CountryName");

                    b.Property<double>("Latitude");

                    b.Property<double>("Longitude");

                    b.Property<string>("Name");

                    b.Property<string>("Timezone");

                    b.HasKey("AirportId");

                    b.ToTable("Airport");
                });

            modelBuilder.Entity("FlightManager.DataAccessLayer.Entities.Flight", b =>
                {
                    b.Property<int>("FlightId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AirlineId");

                    b.Property<DateTime>("Arrival");

                    b.Property<int>("ArrivalAirportId");

                    b.Property<DateTime>("Departure");

                    b.Property<int>("DepartureAirportId");

                    b.Property<string>("Number");

                    b.HasKey("FlightId");

                    b.HasIndex("AirlineId");

                    b.HasIndex("ArrivalAirportId");

                    b.HasIndex("DepartureAirportId");

                    b.ToTable("Flight");
                });

            modelBuilder.Entity("FlightManager.DataAccessLayer.Entities.Flight", b =>
                {
                    b.HasOne("FlightManager.DataAccessLayer.Entities.Airline", "FlightAirline")
                        .WithMany("Flights")
                        .HasForeignKey("AirlineId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FlightManager.DataAccessLayer.Entities.Airport", "To")
                        .WithMany("Arrivals")
                        .HasForeignKey("ArrivalAirportId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("FlightManager.DataAccessLayer.Entities.Airport", "From")
                        .WithMany("Departures")
                        .HasForeignKey("DepartureAirportId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
